<!--
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-->
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<title>ITSE 1372</title>
<style type="text/css">
a:link {color:#0000ff;}
a:visited {color:#cc00cc;}
a:active {color:#ff0000;}
a:hover {color: #cc0000;font-weight: bold;text-decoration: none;}

pre {color: black;}
p{color:black;}
h1{color:black}
h2{color: black}
h3{color: black}
b{color: #000000}
strong{color: #000000}
blockquote{color: black}
ul{color: black}
ol{color: black}
table{border: 1px solid black}
th{border: 1px solid black}
body{
	font-family: Arial,Helvetica,sans-serif;
	font-size: 12pt;
	background-color: #FEFFF0;}
.auto-style1 {
	text-align: center;
}
</style>
</head>

<body>

<center>
<h2>ITSE 1372</h2>
</center>

<center>
<h2 style="text-align: center;">Project 07</h2>
<h2 style="text-align: center;">SciPy</h2>
</center>
<p>File Proj07.htm</p>
<p>Revised: 01/01/22</p>

<p>R. G. Baldwin instructor<br/>
 </p>

<center>
<h2>Read The Instructions Carefully</h2>
</center>

<p>A detailed set of instructions is provided in a separate document titled <strong>Instructions for Downloading and Submitting Assignments </strong> that you can
view in the orientation material for this course.</p>
<p>I recommend that you study those instructions <strong>very carefully</strong> 
and make yourself a checklist to ensure that you meet all of the 
requirements before submitting your project.</p>
<p>Failure to follow the instructions to the letter usually results in a
failing grade, normally zero. The general instructions in that document apply
to this project. In addition, this document provides specific
instructions for the project. </p>

<p>If you have any questions regarding instructions, please ask them at least
one week prior to the assignment deadline. Don't end up with a bad grade due to the
fact that you didn't understand the instructions. </p>

<p>Every semester there are one or two students who are surprised and saddened
to learn that I really do mean that you must follow the instructions and meet
the specifications exactly or you won't get credit for the assignment. Don't be
one of those students.</p>

<center>
<h2>Typographical Errors</h2>
</center>
<p>If you discover any typographical errors in this document, please let me know
so that I can correct the error and notify all of the students.</p>
<h2 class="auto-style1">Specific Project Requirements</h2>
<p>Specific project requirements follow:</p>
<table border="2" cellpadding="10">
  <tbody>
    <tr>
      <td><p>Proj07 Copyright 2018 R.G.Baldwin</p>
	  <p>Among other things, this assignment requires the student to understand 
	  time series and Fourier analysis (see 
	  <a href="https://cnx.org/contents/mNJTwIBE@38.2:c-n7XnXf@5/Dsp00095-Preface-to-Digital-Si">Digital Signal Processing - DSP</a>) 
	  and the SciPy functionality that supports that technology. </p>
	  <p>(Note that the 
	  material referenced above is scheduled to be moved from OpenStax to 
	  Internet Archive in August 2022. The DSP Ebook that you can download from 
	  the Bb course menu contains the same material in PDF format.)</p>

	  <p>PROGRAM SPECIFICATIONS</p>
	  <p>Begin by copying the file named StarterFile.ipynb into a file named 
	  Proj07YourName.ipynb. Update that file to meet the following 
	  specifications.</p>
	  <p>Create a Jupyter notebook named Proj07YourName.ipynb that begins by 
	  displaying the following certification.</p>
	  <p>I certify that this project is my own work and is not the work of others. I agree not to share my solution with others. - Print your name here.</p>
	  <p>Then use the pre-written code in the notebook to create and display a 
	  square wave that matches the following image.</p>
	  <p><img alt="Missing image" height="288" src="SquareWave.jpg" width="432"></p>
	  <p>Then write the necessary code in the notebook to compute and display a 
	  logarithmic presentation of the amplitude spectrum of the square wave that 
	  <a name="matches_the_following_image">matches the following image</a>. <em>(See <a href="#Update_09/03/20">updated 
	  information</a> regarding the plot below.)</em></p>
	  <p>
	  <img alt="Missing image" height="288" src="LogSpectrum.jpg" width="432"></p>
	  <p>Then write the necessary code in the notebook to compute and display a 
	  linear presentation of the amplitude spectrum of the square wave that 
	  matches the following image.</p>
	  <p>
	  <img alt="Missing image" height="288" src="LinearSpectrum.jpg" width="432"></p>
	  <p>Also cause your code to write each of the three images into output 
	  files named:</p>
	  <ul>
		  <li>SquareWave.jpg</li>
		  <li>LogSpectrum.jpg</li>
		  <li>LinearSpectrum.jpg</li>
	  </ul>
		<p>Download an HTML version of your notebook named Proj07YourName.html.</p>
	  <p>Encapsulate a copy of the HTML file, a copy of the ipynb file, and each 
	  of the three image files in a 
	  zip file and submit the zip file via Blackboard.</p>
	  <p>Be sure that your actual name appears in the certification, in each 
	  of the images, and in the file names as indicated.</p>
	  <p><a name="Update_09/03/20"><strong>Update 01/25/21</strong></a></p>
	  <p>A student has determined that when she runs my Python code on her 
	  system, the logarithmic presentation of the amplitude spectrum of the 
	  square wave differs from the presentation produced by my system, which is 
	  shown <a href="#matches_the_following_image">above</a>. The presentation produced by her system is shown below.</p>
	  <p>
	  <img alt="Alternate log spectrum" height="231" src="logspectrum02.jpg" width="348"></p>
	  <p>Note in particular that the tick marks and the labels on the tick marks 
	  on the vertical axis are different from that shown 
	  <a href="#matches_the_following_image">above</a>. <em>(I inserted 
	  the black rectangle to cover the student' name.)</em> Other students have 
	  identified other formatting differences on their systems.</p>
	  <p>I have concluded that this is probably the result of us having 
	  different versions of Jupyter Notebook. If your solution shows similar 
	  differences in the formatting of your plots, that will be acceptable. </p>
	  <p><strong>Update: 01/01/22</strong></p>
	  <div class="vtbegenerated_div">
		  This assignment can be a significant challenge for those who are new 
		  to these concepts. For those having difficulty creating the square 
		  wave for Asg07, the "formula" is provided in the page at
		  <a href="https://cnx.org/contents/mNJTwIBE@38.2:9QRQR-Oh@10/Dsp00100-Periodic-Motion-and-Sinusoids#Figure_6" rel="noreferrer noopener" target="_blank">
		  https://cnx.org/contents/mNJTwIBE@38.2:9QRQR-Oh@10/Dsp00100-Periodic-Motion-and-Sinusoids#Figure_6</a>
		  <br><br>(Note that this page is scheduled to be moved from OpenStax to 
		  an Internet Archive in August 2022. Also see Figure 6 in lesson
		  <strong>Dsp00100-Periodic Motion and Sinusoids</strong> in the DSP 
		  Ebook that you can download from your Bb course menu..)<br><br>I will 
		  repeat the formula here for your convenience:</div>
	  <pre>cos(2*pi*x/50)
- cos(2*pi*x*3/50)/3
+ cos(2*pi*x*5/50)/5
- cos(2*pi*x*7/50)/7
+ cos(2*pi*x*9/50)/9
- cos(2*pi*x*11/50)/11
+ cos(2*pi*x*13/50)/13
- cos(2*pi*x*15/50)/15
+ cos(2*pi*x*17/50)/17
- cos(2*pi*x*19/50)/19</pre>
	  <div class="vtbegenerated_div">
		  You would do well to compare the curves in Figure 5 and Figure 6 at 
		  that location to understand what this formula represents.<br><br></div>
	  <div class="vtbegenerated_div">
		  Here is the formula shown in Python code.</div>
	  <pre>freq = 220 #cycles per second (Hz)
period = 1/freq #seconds per sample

#Create 40 samples for each cycle of the square wave
time_step = period/40 #sampling interval
print('time between samples =',time_step, 'seconds')
print('samp rate =',1/time_step, 'samp per second')

#Create a time base sufficient to describe four cycles of the
# square wave with an interval of time_step.
time_vec = np.arange(0, 4*period,time_step)

#Create a square wave sampled at the times in the time base
sig1 = (np.cos(2 * np.pi * time_vec / period)) 
sig2 = (np.cos(2 * np.pi * time_vec * 3 / period))/3 
sig3 = (np.cos(2 * np.pi * time_vec * 5 / period))/5 
sig4 = (np.cos(2 * np.pi * time_vec * 7 / period))/7
sig5 = (np.cos(2 * np.pi * time_vec * 9 / period))/9
sig6 = (np.cos(2 * np.pi * time_vec * 11 / period))/11
sig7 = (np.cos(2 * np.pi * time_vec * 13 / period))/13
sig8 = (np.cos(2 * np.pi * time_vec * 15 / period))/15
sig9 = (np.cos(2 * np.pi * time_vec * 17 / period))/17
sig10 = (np.cos(2 * np.pi * time_vec * 19 / period))/19

sig = sig1-sig2+sig3-sig4+sig5-sig6+sig7-sig8+sig9-sig10</pre>
	  <div class="vtbegenerated_div">
		  The code shown above produces the following output text:</div>
	  <pre>time between samples = 0.00011363636363636364 seconds
samp rate = 8800.0 samp per second</pre>
	  <div class="vtbegenerated_div">
		  <br></div>
	  <div class="vtbegenerated_div">
		  If you need more background, you might want to take a look at the 
		  following free online book:</div>
	  <div class="vtbegenerated_div">
		  <a href="https://open.umn.edu/opentextbooks/textbooks/think-dsp-digital-signal-processing-in-python" rel="noreferrer noopener" target="_blank">
		  Think DSP: Digital Signal Processing in Python</a></div>
	  <p>&nbsp;</p>
</td>
    </tr>
  </tbody>
</table>




<p>-end-
 </p>

</body>
</html>
